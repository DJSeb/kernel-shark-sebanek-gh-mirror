/*!
 * @file mainpage.doxygen
 * @date 2025-03-25
 * @version 1.0
 * @copyright Copyright (C) 2025, David Jaromír Šebánek <djsebofficial@gmail.com>
 * 
 * @mainpage
 * This is an API documentation, for user documentation, seek out "user-manual" markdown or PDF document.
 * @section intro Introductions
 * **Naps** (also referred to as Plugin in this text) is a plugin for the trace-cmd data visualiser KernelShark.
 * Nap, in Plugin's definition, is the space in a single task's plot between a switch event and a
 * waking event which wakes this task again. Plugin also informs the user about the previous state of the
 * task just before the switch.
 *
 * @subsection purpose Purpose
 *
 * It's main purpose is to show duration and previous state of a task that has just switched and will wake up during
 * the trace again. Such feature is not included in KernelShark or its default plugins. Closest one may get is the
 * sched_events plugin, which only visualises switch-to-switch or waking-to-switch portions of the trace.
 * 
 * @subsection features Features
 * - Plugin will visualise naps as rectangles between events *sched/sched_switch* & either *sched/sched_waking* or
 * *couplebreak/sched_waking[target]*. This is chosen during plugin's load per data stream, by detection of 
 * couplebreak's on/off status in each stream. If couplebreak is inactive, the sched-generated event will be used,
 * otherwise couplebreak's generated target event will.
 * 
 * - Plugin will color the *nap rectangles* using information from previous state of the task and its PID.
 * PID-color is determined internally by KernelShark, Plugin only accesses it and uses it for the rectangle's outlines.
 * Color from the previous state is used to fill the shape's insides. It is chosen via to a state-to-color
 * mapping as follows:
 *      - Uninterruptible disk sleep -> red
 *      - Idle -> Yellow
 *      - Parked -> Orange
 *      - Running -> Green
 *      - Sleeping -> Blue
 *      - Stopped -> Cyan
 *      - Tracing stop -> Brown
 *      - Dead -> Magenta
 *      - Zombie -> Purple
 *
 * - Plugin will also write into the rectangle, if it is wide enough, the full name and abbreviation of the previous
 * state of the task. The text will be either black or white, chosen via color intensity of the background color.
 * 
 * - If couplebreak is OFF in the loaded stream, Plugin will change the owner PID of a sched/sched_waking entry to
 * allow it to be displayed in the task plot - otherwise there wouldn't be a waking event entry to connect the switch
 * to, as waking entries by default belong to the task waking another (it is its work). This may be a major source of
 * incompatiblity with other plugins and using couplebreak is suggested.
 *
 * - Plugin may be built to work with unmodified KernelShark, but compatibility with other plugins, especially
 * sched_events, will be sacrificed.
 * 
 * - Plugin offers an task-like coloring version, which will change the top and bottom outline of nap rectangles
 * to be of the same color as the task owning said rectangle. This option has to be turned on in the configuration
 * upon each plugin load, as it is not persistent. It couldn't be hardwired into the code due to issues with session
 * loads.
 *
 * @section acknow Acknowledgments
 *
 * - The idea of this plugin was suggested by **Jan Kára RNDr.**
 * - **Yordan Karadzhov** - maintains KernelShark, inspiration in already written plugins was of immense help
 * - ChatGPT deserves the "greatest evolution of the rubber ducky" award - not very helpful, but great to just unload
 * bad ideas onto
 * - **Doxygen Awesome CSS** - [beautiful CSS theme](https://jothepro.github.io/doxygen-awesome-css/index.html)
 * that makes Doxygen documentation look visually pleasing
 *
 * @subsection author About author
 *
 * David Jaromír Šebánek (e-mail: `djsebofficial@gmail.com`)
 * Direct all inquiries about this plugin there.
 *
 * @section license License
 * This plugin uses MIT licensing.
 * KernelShark uses LGPL-2.1.
 */