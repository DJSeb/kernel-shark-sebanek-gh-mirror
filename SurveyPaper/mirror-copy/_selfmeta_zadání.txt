Trasování procesů v operačním systému Linux tradičně probíhá
pomocí aplikace perf / trace-cmd. Tato aplikace sbírá trasovací
data, která je pak nutné pro následnou efektivní analýzu
vhodně vizualizovat. Jedním z nástrojů pro vizualizaci trasovacích
dat je aplikace Kernel Shark. Cílem práce je naimplementovat
vylepšení do aplikace Kernel Shark, které umožní efektivní analýzu
spících procesů (na co čekají, kdo je probudil, jestli spí v
přerušitelném nebo nepřerušitelném typu spánku, atd.). Dalším
vylepšením je pak vizualizace CPU cache topologie systému a
přehledné řazení CPU při vizualizaci trasovacích dat s ohledem
na tuto topologii.

^--- Topologie CPU -> NUMA topologie (šla by i package topologie, ale ta by kopírovala/silně se inspirovala NUMA topologií).

Součástí práce je i rešerše trasování v Linuxu, základních
metod vizualizace trasovacích dat a demonstrace využití
naimplementovaných vylepšení aplikace Kernel Shark na
příkladech.

^--- Měli jsme tam napsat "o trasování v Linuxu, základních
metod vizualizace trasovacích dat, KernelSharku a vylepšení této aplikace s příklady", jenom trasování je zavádějící, hlavně jelikož to má být hlavně pro kontext toho, co se dělalo. O trasování se jinak už ví dlouho spousta věcí a my nevymýšlíme KShark ani trace-cmd,
u kterých by dávalo větší smysl více se zamyslet nad tím, jak se něco zachytává v Linuxu a jak by se to hodilo zobrazit (KS)/lépe používat (t-cmd). Snad to nějak vymyslíme, aby nebylo úplně divný, když to nebude hlavní fokus bakalářky. Kdybychom se na to víc soustředili, spousta věcí, které se budou psát pak, by s tím ani nesouvisely. Zadání jsme si s vedoucím odsouhlasili vzájemně, ale tohle nám asi úplně nevyšlo, ups :D Snad se tohle dá počítat jako jeden z případů, kdy se "vyřeší něco trochu mimo zadání, s důvodem proč"...
^--- No, tak to se vyřeší, nakonec lze najít souvislosti :D

Seznam odborné literatury:
https://kernelshark.org/
https://docs.kernel.org/trace/index.html
https://www.brendangregg.com/overview.html